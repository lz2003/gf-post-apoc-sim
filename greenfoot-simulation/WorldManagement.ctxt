#BlueJ class context
comment0.target=WorldManagement
comment0.text=\n\ Write\ a\ description\ of\ class\ WorldManagement\ here.\n\ \n\ @author\ (your\ name)\ \n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=worldWidth\ worldHeight\ world
comment1.target=WorldManagement(int,\ int,\ MyWorld)
comment1.text=\n\ Constructor\ of\ the\ WorldManagement\ Class.\ Use\ to\ set\ up\ the\ world\n
comment10.params=
comment10.target=void\ initBuildings()
comment10.text=\n\ Initializes\ the\ building\ slots\ on\ the\ world.\n
comment11.params=
comment11.target=void\ initScoreBar()
comment11.text=\n\ Initializes\ the\ ScoreBar\ that\ displays\ the\ stats\ of\ the\ world.\n
comment12.params=
comment12.target=void\ cameraActions()
comment12.text=\n\ Controls\ the\ camera's\ movement.\n
comment13.params=
comment13.target=void\ generateTrees()
comment13.text=\n\ Generates\ and\ places\ trees\ based\ on\ a\ random\ seed.\n
comment14.params=
comment14.target=void\ limitResources()
comment14.text=\n\ Limits\ the\ resources\ if\ either\ the\ resource\ goes\ over\ the\n\ max\ capacity\ or\ less\ than\ zero.\n
comment15.params=
comment15.target=void\ calculateDemand()
comment15.text=\n\ Calculates\ the\ demand\ for\ each\ building\n
comment16.params=humanID\ xLoc\ yLoc
comment16.target=void\ addHuman(int,\ int,\ int)
comment16.text=\n\ Adds\ a\ human\ instance\ to\ the\ world.\n\ \n\ @param\ humanID\ \ \ the\ type\ of\ human\ to\ be\ added\n\ @param\ xLoc\ \ \ \ \ \ the\ x\ location\ of\ the\ human\n\ @param\ yLoc\ \ \ \ \ \ the\ y\ location\ of\ the\ human\n
comment17.params=index
comment17.target=Human\ getHuman(int)
comment17.text=\n\ Returns\ a\ human\ instance\ at\ a\ specified\ index\ from\ the\ humans\n\ Arraylist\n\ \n\ @param\ index\ \ \ \ \ the\ index\ of\ the\ Arraylist\n\ @return\ Human\ \ \ \ the\ human\ instance\ at\ that\ index\n
comment18.params=
comment18.target=java.util.ArrayList\ getHumans()
comment18.text=\n\ Returns\ a\ list\ of\ all\ th\ current\ human\ instances\n\ \n\ @return\ ArrayList<Human>\ the\ list\ containing\ all\ human\ instances\n
comment19.params=
comment19.target=void\ setHumanCounts()
comment19.text=\n\ Calculates\ the\ total\ number\ of\ existing\ humans.\n
comment2.params=
comment2.target=void\ init()
comment2.text=\n\ Initializes\ the\ assets\ of\ the\ world.\ This\ includes\n
comment20.params=
comment20.target=void\ setBuildingCounts()
comment20.text=\n\ Calculates\ the\ total\ number\ of\ existing\ buildings.\n
comment21.params=
comment21.target=void\ checkHousingSpace()
comment21.text=\n\ Checks\ if\ there\ is\ housing\ space\n
comment22.params=
comment22.target=boolean\ hasHousing()
comment22.text=\n\ @return\ hasHousingSpace\n
comment23.params=index
comment23.target=BuildingSlot\ getBuildingSlot(int)
comment23.text=\n\ Returns\ the\ building\ slot\ at\ a\ specified\ index.\n\ \n\ @param\ index\ \ \ \ \ \ \ \ \ \ \ \ \ the\ index\ of\ the\ ArrayList\n\ @return\ BuildingSlot\ \ \ \ \ the\ building\ slot\ at\ that\ index\n
comment24.params=
comment24.target=java.util.ArrayList\ getBuildings()
comment24.text=\n\ Returns\ an\ ArrayList\ of\ all\ existing\ buildings.\n\ \n\ @return\ ArrayList<BuildingSlot>\ \ list\ of\ all\ buildings\n
comment25.params=
comment25.target=void\ setDeltaTime()
comment25.text=\n\ Set\ the\ delta\ time\ and\ updates\ the\ time\ elapsed.\n
comment3.params=
comment3.target=void\ _update()
comment3.text=\n\ Methods\ that\ updates\ the\ world.\n
comment4.params=
comment4.target=void\ updateSprites()
comment4.text=\n\ Methods\ that\ updates\ the\ sprites\ based\ on\ camera\ movement.\n
comment5.params=
comment5.target=void\ updateLoop()
comment5.text=\n\ Methods\ that\ updates\ each\ human\ and\ building\ instance.\n
comment6.params=
comment6.target=void\ updateCounts()
comment6.text=\n\ Method\ that\ updated\ the\ numbers/variables\ of\ the\ game.\ This\n\ includes\ population,\ buildings,\ resources\ and\ demand,\n
comment7.params=
comment7.target=void\ updateResources()
comment7.text=\n\ Method\ that\ updates\ resources\ produced\ from\ structures.\n
comment8.params=
comment8.target=void\ updateScoreBar()
comment8.text=\n\ Method\ that\ updates\ the\ scorebar\ and\ its\ stats.\n
comment9.params=
comment9.target=void\ initBackgrounds()
comment9.text=\n\ Method\ that\ intializes\ the\ background\ of\ the\ world.\n
numComments=26
