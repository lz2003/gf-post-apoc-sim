#BlueJ class context
comment0.target=StatBar
comment0.text=\n\ New\ and\ Improved\ Stat\ Bar\ (Formerly\ Health\ Bar).\ This\ stat\ bar\ can\ be\ set\ to\ follow\n\ an\ Actor\ or\ stay\ in\ one\ place\ (see\ constructors).\ This\ stat\ bar\ may\ have\ customized\ colors,\n\ can\ hide\ when\ at\ full,\ and\ can\ have\ a\ customized\ border.\ This\ class\ aims\ to\ be\ as\ flexible\n\ as\ possible,\ allowing\ it\ to\ be\ simple\ to\ use\ for\ beginners\ (easy\ 0\ or\ 2\ parameter\ constructor)\n\ while\ also\ highly\ flexible\ for\ those\ who\ want\ to\ provide\ more\ specific\ parameters\ (multiple\ bars\n\ in\ custom\ colours\ and\ sizes\ with\ custom\ offsets\ and\ borders).\n\ <p>\n\ Implementation\ -\ If\ using\ multiple\ bars,\ all\ arrays\ must\ be\ the\ same\ size.\ To\ \n\ optimize\ the\ appearance\ choose\ a\ height\ such\ that\:\n\ <p><code>\ (height\ -\ (borderThickness\ *\ 2))\ %\ numBars\ \=\=\ 0\ \ </code></p>\n\ <p>In\ other\ words,\ after\ factoring\ out\ the\ border,\ the\ size\ should\ be\ evenly\ divisible\ by\ \n\ the\ number\ of\ bars,\ so\ that\ all\ bars\ end\ up\ the\ same\ size.</p>\n\ <p><b>Version\ Notes\:</b></p>\n\ <ul>\n\ <li>Now\ has\ a\ boolean\ to\ determine\ whether\ it\ will\ hide\ itself\ when\ Val\ is\ full.</li>\n\ <li>Now\ has\ a\ set\ of\ constructors\ to\ allow\ simple\ and\ complex\ implementation.</li>\n\ <li>2.1.0\ -->\ Added\ a\ border\ feature,\ allows\ customization\ of\ thickness\ and\ colour</li>\n\ </ul>\n\ \n\ @author\ Jordan\ Cohen\n\ @author\ Mr\ Cohen\n\ @version\ 2.1.0\ -\ 2020\ rewrite\n
comment1.params=
comment1.target=StatBar()
comment1.text=\n\ Main\ constructor\ -\ A\ basic\ constructor\ that\ sets\ default\ values.\ Easy\ to\ use,\ not\ very\ flexible.\n
comment10.params=newCurrVal
comment10.target=void\ update(int)
comment11.params=newCurrVal
comment11.target=void\ update(int[])
comment11.text=\n\ update\ Method\:\n\ \n\ Expects\ new\ current\ Val\n\ \n\ Returns\ true\ if\ Val\ has\ changed\ (needs\ an\ update)\n\ Returns\ false\ if\ Val\ has\ not\ changed\ (to\ avoid\ excessive\ processing)\n
comment12.params=maxVal
comment12.target=void\ setMaxVal(int[])
comment13.params=
comment13.target=void\ redraw()
comment2.params=maxVal\ owner
comment2.target=StatBar(int,\ greenfoot.Actor)
comment2.text=\n\ A\ simple\ constructor\ -\ specify\ a\ single\ value\ (which\ will\ be\ treated\ as\ both\ current\ and\ max\ for\ the\ stat)\n\ as\ well\ as\ an\ owner\ to\ follow.\ If\ you\ do\ not\ want\ this\ to\ follow\ an\ Actor,\ use\ null\ for\ the\ second\ parameter.\n\ \n\ @param\ maxVal\ \ \ \ The\ maximum\ value\ for\ this\ stat,\ which\ will\ also\ be\ the\ starting\ value\ for\ this\ stat\n\ @param\ owner\ \ \ \ \ The\ Actor\ to\ follow\ around.\ If\ you\ do\ not\ want\ to\ associate\ this\ with\ an\ Actor,\ provide\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ null\ instead.\n
comment3.params=maxVal\ currVal\ owner\ width\ height\ offset
comment3.target=StatBar(int,\ int,\ greenfoot.Actor,\ int,\ int,\ int)
comment3.text=\n\ \ A\ simple\ constructor\ for\ a\ somewhat\ customized\ stat\ bar.\ If\ owner\ is\ null,\ just\ position\ this\ object\ where\ you\ want\ it\ and\ it\ wont\ move.\n\ \ If\ owner\ is\ not\ null,\ this\ object\ will\ follow\ the\ owner.\n\ \ \n\ \ @param\ \ maxVal\ \ the\ maximum\ value\ for\ this\ stat\n\ \ @param\ currVal\ \ the\ starting\ value\ for\ this\ stat\n\ \ @param\ \ owner\ \ \ the\ Actor\ that\ this\ stat\ bar\ will\ follow\ (null\ for\ DONT\ FOLLOW).\ Can\ be\ changed\ to\ just\ an\ Actor\ if\ needed\n\ \ @param\ \ width\ \ \ the\ width\ of\ the\ stat\ bar\n\ \ @param\ height\ \ \ the\ height\ of\ the\ stat\ bar\n\ \ @param\ offset\ \ \ the\ y-offset\ for\ positioning\ this\ bar\ in\ relation\ to\ it's\ owner\n
comment4.params=maxVal\ currVal\ owner\ width\ height\ offset\ filledColor\ missingColor
comment4.target=StatBar(int,\ int,\ greenfoot.Actor,\ int,\ int,\ int,\ greenfoot.Color,\ greenfoot.Color)
comment4.text=\n\ \ Similar\ to\ above,\ but\ with\ the\ ability\ to\ customize\ colors\n\ \ \n\ \ @param\ \ maxVal\ \ the\ maximum\ value\ for\ this\ stat\n\ \ @param\ currVal\ \ the\ starting\ value\ for\ this\ stat\n\ \ @param\ \ owner\ \ \ the\ Actor\ that\ this\ stat\ bar\ will\ follow\ (null\ for\ DONT\ FOLLOW).\ Can\ be\ changed\ to\ just\ an\ Actor\ if\ needed\n\ \ @param\ \ width\ \ \ the\ width\ of\ the\ stat\ bar\n\ \ @param\ height\ \ \ the\ height\ of\ the\ stat\ bar\n\ \ @param\ offset\ \ \ the\ y-offset\ for\ positioning\ this\ bar\ in\ relation\ to\ it's\ owner\n\ \ @param\ filledColor\ \ the\ color\ to\ be\ used\ to\ represent\ the\ current\ value\n\ \ @param\ missingColor\ the\ color\ to\ be\ used\ to\ represent\ the\ missing\ value\n
comment5.params=maxVal\ currVal\ owner\ width\ height\ offset\ filledColor\ missingColor\ hideAtMax
comment5.target=StatBar(int,\ int,\ greenfoot.Actor,\ int,\ int,\ int,\ greenfoot.Color,\ greenfoot.Color,\ boolean)
comment5.text=\n\ \ Similar\ to\ above,\ but\ with\ the\ ability\ to\ have\ the\ bar\ hide\ when\ full\ -\ for\ example\ if\ you\ don't\ want\ full\ health\ bars\ shown.\n\ \ \n\ \ @param\ \ maxVal\ \ the\ maximum\ value\ for\ this\ stat\n\ \ @param\ currVal\ \ the\ starting\ value\ for\ this\ stat\n\ \ @param\ \ owner\ \ \ the\ Actor\ that\ this\ stat\ bar\ will\ follow\ (null\ for\ DONT\ FOLLOW).\ Can\ be\ changed\ to\ just\ an\ Actor\ if\ needed\n\ \ @param\ \ width\ \ \ the\ width\ of\ the\ stat\ bar\n\ \ @param\ height\ \ \ the\ height\ of\ the\ stat\ bar\n\ \ @param\ offset\ \ \ the\ y-offset\ for\ positioning\ this\ bar\ in\ relation\ to\ it's\ owner\n\ \ @param\ filledColor\ \ the\ color\ to\ be\ used\ to\ represent\ the\ current\ value\n\ \ @param\ missingColor\ the\ color\ to\ be\ used\ to\ represent\ the\ missing\ value\n\ \ @param\ \ hideAtMax\ \ \ set\ to\ true\ to\ have\ this\ statBar\ hide\ itself\ when\ currVal\ \=\=\ maxVal\n
comment6.params=maxVal\ currVal\ owner\ width\ height\ offset\ filledColor\ missingColor\ hideAtMax\ borderColor\ borderThickness
comment6.target=StatBar(int,\ int,\ greenfoot.Actor,\ int,\ int,\ int,\ greenfoot.Color,\ greenfoot.Color,\ boolean,\ greenfoot.Color,\ int)
comment6.text=\n\ \ The\ most\ detailed\ constructor\!\ Can\ specify\ a\ border\ including\ thickness\ and\ color.\n\ \ \n\ \ @param\ \ maxVal\ \ the\ maximum\ value\ for\ this\ stat\n\ \ @param\ currVal\ \ the\ starting\ value\ for\ this\ stat\n\ \ @param\ \ owner\ \ \ the\ Actor\ that\ this\ stat\ bar\ will\ follow\ (null\ for\ DONT\ FOLLOW).\ Can\ be\ changed\ to\ just\ an\ Actor\ if\ needed\n\ \ @param\ \ width\ \ \ the\ width\ of\ the\ stat\ bar\n\ \ @param\ height\ \ \ the\ height\ of\ the\ stat\ bar\n\ \ @param\ offset\ \ \ the\ y-offset\ for\ positioning\ this\ bar\ in\ relation\ to\ it's\ owner\n\ \ @param\ filledColor\ \ the\ color\ to\ be\ used\ to\ represent\ the\ current\ value\n\ \ @param\ missingColor\ the\ color\ to\ be\ used\ to\ represent\ the\ missing\ value\n\ \ @param\ \ hideAtMax\ \ \ set\ to\ true\ to\ have\ this\ statBar\ hide\ itself\ when\ currVal\ \=\=\ maxVal\n\ \ @param\ borderColor\ \ the\ Color\ of\ the\ border\n\ \ @param\ borderThickness\ \ the\ thickness\ of\ the\ border.\ This\ value\ should\ be\ at\ least\ 1.\n
comment7.params=maxVal\ currVal\ owner\ width\ height\ offset\ filledColor\ missingColor\ hideAtMax\ borderColor\ borderThickness
comment7.target=StatBar(int[],\ int[],\ greenfoot.Actor,\ int,\ int,\ int,\ greenfoot.Color[],\ greenfoot.Color[],\ boolean,\ greenfoot.Color,\ int)
comment7.text=\n\ The\ king\ of\ all\ StatBar\ constuctors\!\n\ \n\ Takes\ details\ for\ an\ array\ of\ bars,\ otherwise\ the\ same\ as\ above.\ Note\ that\ all\ arrays\ must\ be\ the\ same\ length.\n\ \n\ \ @param\ \ maxVal[]\ \ the\ maximum\ values\ for\ each\ stat\n\ \ @param\ currVal[]\ \ the\ starting\ values\ for\ each\ stat\n\ \ @param\ \ owner\ \ \ the\ Actor\ that\ this\ stat\ bar\ will\ follow\ (null\ for\ DONT\ FOLLOW).\ Can\ be\ changed\ to\ just\ an\ Actor\ if\ needed\n\ \ @param\ \ width\ \ \ the\ width\ of\ the\ stat\ bar\n\ \ @param\ height\ \ \ the\ height\ of\ the\ stat\ bar\n\ \ @param\ offset\ \ \ the\ y-offset\ for\ positioning\ this\ bar\ in\ relation\ to\ it's\ owner\n\ \ @param\ filledColor[]\ \ the\ colors\ to\ be\ used\ to\ represent\ the\ current\ values\n\ \ @param\ missingColor[]\ the\ colors\ to\ be\ used\ to\ represent\ the\ missing\ values\n\ \ @param\ \ hideAtMax\ \ \ set\ to\ true\ to\ have\ this\ statBar\ hide\ itself\ when\ currVal\ \=\=\ maxVal\n\ \ @param\ borderColor\ \ the\ Color\ of\ the\ border\n\ \ @param\ borderThickness\ \ the\ thickness\ of\ the\ border.\ This\ value\ should\ be\ at\ least\ 1.\n
comment8.params=
comment8.target=void\ act()
comment8.text=\n\ The\ only\ purpose\ of\ the\ act\ method\ is\ to\ follow\ the\ target\ Actor.\ If\ you'd\ rather\ control\ this\ yourself,\n\ delete\ this\ act()\ method\ and\ call\ moveMe()\ directly\ whenever\ your\ Actor\ moves.\ \n
comment9.params=
comment9.target=void\ moveMe()
comment9.text=\n\ For\ projects\ where\ efficiency\ is\ more\ important,\ DELETE\ THE\ ACT\ METHOD\ and\ call\ this\ directly\ instead.\n\ \n\ This\ allows\ the\ statBar\ object\ to\ be\ reactive,\ only\ moving\ when\ told,\ rather\ than\ acting\n\ each\ act().\ For\ most\ projects,\ and\ especially\ for\ beginners,\ the\ act\ method\ is\ easier\ to\ manage.\n\ \n
numComments=14
